ccopy_reg
_reconstructor
p0
(clarch.project.project_root
ProjectRoot
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'startup_page_id'
p6
NsS'python_package_name'
p7
NsS'front_page_id'
p8
NsS'contents'
p9
(lp10
g0
(clarch.project.project_package
ProjectPackage
p11
g2
Ntp12
Rp13
(dp14
S'name'
p15
VLib
p16
sg9
(lp17
g0
(clarch.project.project_page
ProjectPage
p18
g2
Ntp19
Rp20
(dp21
S'data'
p22
g0
(clarch.worksheet.worksheet
Worksheet
p23
g2
Ntp24
Rp25
(dp26
S'blocks'
p27
(lp28
g0
(clarch.worksheet.worksheet
WorksheetBlockText
p29
g2
Ntp30
Rp31
(dp32
S'worksheet'
p33
g25
sS'text'
p34
V<h1>JIT Hooks</h1><p>First, we want some CSS for styling the PyPy output:</p>
p35
sbag0
(clarch.worksheet.worksheet
WorksheetBlockSource
p36
g2
Ntp37
Rp38
(dp39
g33
g25
sS'code'
p40
g0
(clarch.source_code
CSSCode
p41
g2
Ntp42
Rp43
(dp44
S'code'
p45
V.jit_loop_info {\u000a    border: 1px solid #608060;\u000a    border-radius: 5px;\u000a    background: #f8fff8;\u000a    padding: 5px;\u000a}\u000a\u000a.debug_merge_point {\u000a    border: 1px solid #a08060;\u000a    border-radius: 5px;\u000a    background: #fffcf8;\u000a    padding: 5px;\u000a}\u000a\u000a.res_operation {\u000a    border: 1px solid #808060;\u000a    border-radius: 5px;\u000a    background: #fffff8;\u000a    padding: 5px;\u000a}\u000a\u000a.res_operation_name {\u000a    font-family: Fixed;\u000a}\u000a\u000a.box {\u000a    border: 1px solid #606080;\u000a    border-radius: 5px;\u000a    background: #f8f8ff;\u000a    padding: 5px;\u000a}\u000a\u000a.typename {\u000a    font-family: Serif;\u000a    font-size: 1.2em;\u000a    font-weight: bold;\u000a    color: #707070;\u000a}\u000a\u000a.fieldname {\u000a    font-family: Serif;\u000a    font-size: 0.8em;\u000a    font-weight: bold;\u000a    color: #406080;\u000a}
p46
sS'editable'
p47
I01
sbsS'var_name'
p48
Vpypy_css
p49
sbag0
(g29
g2
Ntp50
Rp51
(dp52
g33
g25
sg34
V<p>Now we do some experiments</p>
p53
sbag0
(clarch.worksheet.worksheet
WorksheetBlockCode
p54
g2
Ntp55
Rp56
(dp57
g33
g25
sS'code'
p58
g0
(clarch.source_code
PythonCode
p59
g2
Ntp60
Rp61
(dp62
g45
Vimport pypyjit\u000a\u000afrom britefury.default_perspective.default_perspective import DefaultPerspective\u000afrom britefury.pres.pres import Pres\u000afrom britefury.pres.html import Html\u000afrom britefury.live.live_value import LiveValue\u000a\u000a\u000a\u000adef _present_object(typename, css_class_name, field_name_value_pairs):\u000a    fields = []\u000a    for n, v in field_name_value_pairs:\u000a        fields.extend(['<span class="fieldname">{0}=</span>'.format(n), v, '<br>'])\u000a        \u000a    return Html(*([\u000a                '<div class="{0}">'.format(css_class_name),\u000a                '<span class="typename">{0}</span><br>'.format(typename)] + fields +\u000a                ['</div>'])\u000a		).use_css(source=pypy_css)\u000a    \u000a\u000a\u000a\u000a@DefaultPerspective.instance.presenter(pypyjit.JitLoopInfo)\u000adef _present_JitLoopInfo(model, fragment):\u000a    return _present_object('JitLoopInfo', 'jit_loop_info', [\u000a			('greenkey', model.greenkey),\u000a			('jitdriver_name', model.jitdriver_name),\u000a			('loop_no', model.loop_no),\u000a			('operations', Html(*model.operations)),\u000a		])\u000a\u000a\u000a@DefaultPerspective.instance.presenter(pypyjit.DebugMergePoint)\u000adef _present_DebugMergePoint(model, fragment):\u000a    return _present_object('DebugMergePoint', 'debug_merge_point', [\u000a			('dir()', dir(model)),\u000a       	\u000a		])\u000a\u000a\u000a@DefaultPerspective.instance.presenter(pypyjit.ResOperation)\u000adef _present_ResOperation(model, fragment):\u000a    return Html('<span class="res_operation_name">{0}</span>'.format(model.name), model.result, model.getarg(0), '<br>')\u000a#    return _present_object('ResOperation', 'res_operation', [\u000a#			('name', model.name),\u000a#			#('result', model.result),\u000a#			('getarg()', model.getarg(0)),\u000a#			('dir()', dir(model)),\u000a#      	\u000a#		])\u000a\u000a\u000a\u000a@DefaultPerspective.instance.presenter(pypyjit.Box)\u000adef _present_Box(model, fragment):\u000a    return Html(str(model))\u000a\u000a\u000a\u000a\u000aclass JitMonitor (object):\u000a    def __init__(self):\u000a        self.__loop_info = LiveValue(Html('Hook not invoked'))\u000a        \u000a    \u000a    def __enter__(self):\u000a        pypyjit.set_optimize_hook(self.__hook)\u000a        \u000a        \u000a    def __exit__(self, *args):\u000a        pypyjit.set_optimize_hook(None)\u000a        return False\u000a        \u000a        \u000a        \u000a    def __hook(self, loop_info):\u000a        self.__loop_info.value = loop_info\u000a    \u000a    \u000a    \u000a    def __present__(self, fragment):\u000a        return self.__loop_info\u000a\u000a\u000a    \u000amon = JitMonitor()\u000a\u000a\u000a\u000adef tri(n):\u000a    s = 0\u000a    for i in xrange(n):\u000a        s+=i\u000a    return s\u000a\u000a\u000adef repeat(f,N):\u000a    for i in xrange(N):\u000a        f()\u000a\u000a		\u000a\u000awith mon:\u000a	repeat(lambda: tri(1024), 1024)\u000a    \u000a\u000amon\u000a\u000a\u000a
p63
sg47
I01
sbsbasbsS'name'
p64
Vjit_hooks
p65
sS'id'
p66
I0
sbasbasb.