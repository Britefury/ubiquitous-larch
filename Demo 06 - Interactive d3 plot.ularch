ccopy_reg
_reconstructor
p0
(clarch.apps.worksheet.worksheet
Worksheet
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'blocks'
p6
(lp7
g0
(clarch.apps.worksheet.worksheet
WorksheetBlockText
p8
g2
Ntp9
Rp10
(dp11
S'worksheet'
p12
g4
sS'text'
p13
V<h1>Interactive plots using d3.js</h1><p>In this worksheet, we will demonstrate the creation of interactive visuals with d3.js.</p><h2>Live Computation</h2><p>First, we need to cover some of the live computations primitives provided by Ubiquitous Larch.</p>
p14
sbag0
(clarch.apps.worksheet.worksheet
WorksheetBlockCode
p15
g2
Ntp16
Rp17
(dp18
g12
g4
sS'code'
p19
g0
(clarch.apps.source_code
PythonCode
p20
g2
Ntp21
Rp22
(dp23
g19
V# First, we need to import LiveValue and LiveFunction\u000afrom larch.live import LiveValue, LiveFunction\u000a\u000a\u000a# A quick test:\u000a# Create a live value containing the value 0\u000ax = LiveValue(0)\u000a\u000a# Display it\u000ax
p24
sS'editable'
p25
I01
sbsbag0
(g8
g2
Ntp26
Rp27
(dp28
g12
g4
sg13
V<p>A <code>LiveValue</code> is&nbsp;displayed as the value it contains. If we create a button that increments the value:</p>
p29
sbag0
(g15
g2
Ntp30
Rp31
(dp32
g12
g4
sg19
g0
(g20
g2
Ntp33
Rp34
(dp35
g19
Vfrom larch.controls.button import button\u000a\u000adef on_click():\u000a    x.value = x.value + 1\u000a\u000ab = button('Increment', on_click)\u000a\u000ab
p36
sg25
I01
sbsbag0
(g8
g2
Ntp37
Rp38
(dp39
g12
g4
sg13
V<p>Notice that clicking it updates the value of the <code>LiveValue</code> displayed above.</p><p>A <code>LiveFunction</code> computes its value using a function. It's displayed value is automatically updated when any LiveValues that are accessed by it, are modified:</p>
p40
sbag0
(g15
g2
Ntp41
Rp42
(dp43
g12
g4
sg19
g0
(g20
g2
Ntp44
Rp45
(dp46
g19
V# We can define a live function by definiting the function, then creating the live function:\u000adef _x_squared():\u000a    return x.value * x.value\u000a\u000ax_squared = LiveFunction(_x_squared)\u000a\u000a# Or we can use it as a decorator; this is neater:\u000a@LiveFunction\u000adef x_squared():\u000a    return x.value * x.value\u000a\u000a# Display it\u000ax_squared
p47
sg25
I01
sbsbag0
(g8
g2
Ntp48
Rp49
(dp50
g12
g4
sg13
V<p>Notice that incrementing <code>x</code> with the 'Increment' button modifies both values.</p><h2>Interactive visuals</h2><p>Now, we will create an interactive bar-chart. This time round, the Javascript function that generates the chart takes the data in as a parameter, rather than going via a URL.</p><p>First, the code to create the chart:</p>
p51
sbag0
(clarch.apps.worksheet.worksheet
WorksheetBlockSource
p52
g2
Ntp53
Rp54
(dp55
g12
g4
sg19
g0
(clarch.apps.source_code
JSCode
p56
g2
Ntp57
Rp58
(dp59
g19
Vfunction init_chart(node, data, bar_width, bar_height) {\u000a    // Scales for our chart: X and Y\u000a	var x = d3.scale.linear()\u000a        .domain([0, 1])\u000a        .range([0, bar_width]);\u000a    \u000a    var y = d3.scale.linear()\u000a        .domain([0, 100])\u000a        .rangeRound([0, bar_height]);\u000a\u000a	// Get a reference to the chart DOM node; passed as the first argument\u000a    var chart = d3.select(node);\u000a    \u000a	// Define the bars\u000a    chart.selectAll("rect")\u000a        .data(data)\u000a	   .enter().append("rect")\u000a        .attr("x", function(d, i) { return x(i) - .5; })\u000a        .attr("y", function(d) { return bar_height - y(d) - .5; })\u000a        .attr("width", bar_width)\u000a        .attr("height", function(d) { return y(d); });\u000a\u000a}
p60
sg25
I01
sbsS'var_name'
p61
Vbar_chart_js
p62
sbag0
(g52
g2
Ntp63
Rp64
(dp65
g12
g4
sg19
g0
(clarch.apps.source_code
CSSCode
p66
g2
Ntp67
Rp68
(dp69
g19
V.chart rect {\u000a  fill: steelblue;\u000a  stroke: white;\u000a}
p70
sg25
I01
sbsg61
Vbar_chart_css
p71
sbag0
(g15
g2
Ntp72
Rp73
(dp74
g12
g4
sg19
g0
(g20
g2
Ntp75
Rp76
(dp77
g19
V# We need random\u000aimport random\u000a\u000a# We need Html further down\u000afrom larch.pres.html import Html\u000a
p78
sg25
I01
sbsbag0
(g8
g2
Ntp79
Rp80
(dp81
g12
g4
sg13
V<p>Now, create <code>LiveValues</code>&nbsp;containing the mean and standard deviation:</p>
p82
sbag0
(g15
g2
Ntp83
Rp84
(dp85
g12
g4
sg19
g0
(g20
g2
Ntp86
Rp87
(dp88
g19
Vmean = LiveValue(50.0)\u000astandard_deviation = LiveValue(10.0)
p89
sg25
I01
sbsbag0
(g8
g2
Ntp90
Rp91
(dp92
g12
g4
sg13
V<p>Now create a <code>LiveFunction</code> that generates the chart:</p>
p93
sbag0
(g15
g2
Ntp94
Rp95
(dp96
g12
g4
sg19
g0
(g20
g2
Ntp97
Rp98
(dp99
g19
V# Now, we define a live function that generates the data and a chart\u000a@LiveFunction\u000adef live_chart():\u000a    # Generate the data:\u000a    data = [random.gauss(mean.value, standard_deviation.value)   for i in xrange(33)]\u000a    \u000a    # Generate the chart in the same way that we did in the previous worksheet:\u000a    chart = Html('<svg class="chart" width=660 height=80></svg>')\u000a    chart = chart.js_function_call('init_chart', data, 20, 80)\u000a    chart = chart.use_js(source=bar_chart_js).use_css(source=bar_chart_css)\u000a    chart = chart.use_js('/static/d3.v3.min.js')\u000a    \u000a    return chart
p100
sg25
I01
sbsbag0
(g8
g2
Ntp101
Rp102
(dp103
g12
g4
sg13
V<p>The slider controls:</p>
p104
sbag0
(g15
g2
Ntp105
Rp106
(dp107
g12
g4
sg19
g0
(g20
g2
Ntp108
Rp109
(dp110
g19
V# We need the slider control\u000afrom larch.controls.slider import live_slider\u000a\u000a# Create the sliders\u000amean_slider = live_slider(mean, True, min=10.0, max=90.0, step=0.1, width=400)\u000astdev_slider = live_slider(standard_deviation, True, min=0.0, max=50.0, step=0.1, width=400)\u000a\u000a# Put them in a table\u000asliders = Html('<table><tr><td>Mean:</td><td>', mean_slider, '</td><tr><td>Standard deviation:</td><td>', stdev_slider, '</td></tr></table>')
p111
sg25
I01
sbsbag0
(g8
g2
Ntp112
Rp113
(dp114
g12
g4
sg13
V<p>Now, combine the chart with the sliders (try dragging the sliders to modify the chart):</p>
p115
sbag0
(g15
g2
Ntp116
Rp117
(dp118
g12
g4
sg19
g0
(g20
g2
Ntp119
Rp120
(dp121
g19
V# Arrange the sliders below the chart\u000ainteractive_chart = Html('<div>', live_chart, '</div><div>', sliders, '</div>')\u000a\u000a# And display:\u000ainteractive_chart
p122
sg25
I01
sbsbasb.