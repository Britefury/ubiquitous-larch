ccopy_reg
_reconstructor
p0
(clarch.apps.notebook.notebook
Notebook
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'blocks'
p6
(lp7
g0
(clarch.apps.notebook.notebook
NotebookBlockText
p8
g2
Ntp9
Rp10
(dp11
S'text'
p12
V<h1 style="text-align:center">Getting Started</h1><hr><p><br></p><p>Welcome to The Ubiquitous Larch;&nbsp;an active document based programming environment for the Python programming language.</p><p><br></p><h2>Worksheets</h2><p>The core of the ULarch programming environment is the worksheet system. A worksheets consists of a sequence of editable blocks, that contain either rich text - like this one - or code - such as the ones below. To edit the contents of a block, click within it to place the caret and start typing.</p><p>The edit menu at the top of the page contains options for adding new blocks to a worksheet. Alternatively, these commands can be accessed from the command bar, which will be described below.</p><h2>Python Code</h2><p>Python code blocks can be executed, with the results displayed below each block. To execute the blocks in a worksheet, press Control-Enter or use the <em>Execute</em> button in the command bar at the top.</p><p>Output sent to the standard output and standard error streams is displayed:</p>
p13
sS'notebook'
p14
g4
sbag0
(clarch.apps.notebook.notebook
NotebookBlockCode
p15
g2
Ntp16
Rp17
(dp18
S'code'
p19
g0
(clarch.apps.source_code
PythonCode
p20
g2
Ntp21
Rp22
(dp23
g19
Vprint 'Hello world'
p24
sS'editable'
p25
I01
sbsg14
g4
sbag0
(g8
g2
Ntp26
Rp27
(dp28
g12
V<p>If the last line is an expression that can be evaluated, the resulting value is displayed:</p>
p29
sg14
g4
sbag0
(g15
g2
Ntp30
Rp31
(dp32
g19
g0
(g20
g2
Ntp33
Rp34
(dp35
g19
Vimport math\u000a\u000amath.pi*10*10
p36
sg25
I01
sbsg14
g4
sbag0
(g8
g2
Ntp37
Rp38
(dp39
g12
V<p>If the result is an object, it is displayed in a debugger style form. The sections&nbsp;(<em>Type</em>,&nbsp;<em>Attributes</em>&nbsp;and&nbsp;<em>repr</em>) can be expanded to show the type, attribute values and string representation of the object respectively:</p>
p40
sg14
g4
sbag0
(g15
g2
Ntp41
Rp42
(dp43
g19
g0
(g20
g2
Ntp44
Rp45
(dp46
g19
Vclass Point (object):\u000a    def __init__(self, x, y):\u000a    	self.x = x\u000a        self.y = y\u000a\u000aPoint(10.0, 20.0)
p47
sg25
I01
sbsg14
g4
sbag0
(g8
g2
Ntp48
Rp49
(dp50
g12
V<h2>Command bar</h2><p>The command bar can be accessed by either pressing the button at the top right of the page or by pressing the <em>escape</em> key. After activating the command bar, you type in a key-sequence which corresponds to the command you wish to use. To learn the key sequences that are available, press <em>H</em> while the command bar is active. Please feel free to try this now.</p>
p51
sg14
g4
sbasb.