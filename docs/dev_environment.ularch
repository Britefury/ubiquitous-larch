ccopy_reg
_reconstructor
p0
(clarch.apps.project.project_root
ProjectRoot
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'startup_page_id'
p6
NsS'python_package_name'
p7
Vdevenv
p8
sS'front_page_id'
p9
NsS'contents'
p10
(lp11
g0
(clarch.apps.project.project_page
ProjectPage
p12
g2
Ntp13
Rp14
(dp15
S'data'
p16
g0
(clarch.apps.notebook.notebook
Notebook
p17
g2
Ntp18
Rp19
(dp20
S'blocks'
p21
(lp22
g0
(clarch.apps.notebook.notebook
NotebookBlockText
p23
g2
Ntp24
Rp25
(dp26
S'text'
p27
V<h1 style="text-align:center">Front page</h1><p><br></p><p>You will have seen the front page when you first accessed Ubiquitous Larch using your browser. There you can find a list of open documents and a list of consoles.</p><p><br></p><h2>Open documents</h2><p>Ubiquitous Larch looks for files ending with the extension <code>.ularch</code>. By default it looks in the current working directory. You can change the directory by adding the <code>-d</code> or <code>--docpath</code> command line option.</p><p>Below the document list you can find buttons for creating new documents or importing <a data-cke-saved-href="http://ipython.org/notebook.html" href="http://ipython.org/notebook.html">IPython notebooks</a>. IPython notebooks can be imported either by file upload or by providing a URL from which the notebook can be downloaded.</p><p>Above the list of documents is the <em>reload</em> button. Click it to reload the documents from your file system. This is useful if you download some new documents and wish to access them without restarting Ubiquitous Larch. <strong>Please note that any unsaved changes in your open documents will be lost when you click <em>reload</em>.</strong></p><p><br></p><h2>Command bar<br></h2><p>The command bar can be accessed by either pressing the button at the top right of the page or by pressing the&nbsp;<em>escape</em>&nbsp;key. After activating the command bar, you type in a key-sequence which corresponds to the command you wish to use. To learn the key sequences that are available, press&nbsp;<em>H</em>&nbsp;while the command bar is active. Please feel free to try this now.</p>
p28
sS'notebook'
p29
g19
sbasbsS'name'
p30
Vfrontpage
p31
sS'id'
p32
I0
sbag0
(g12
g2
Ntp33
Rp34
(dp35
g16
g0
(g17
g2
Ntp36
Rp37
(dp38
g21
(lp39
g0
(g23
g2
Ntp40
Rp41
(dp42
g27
V<h1 style="text-align:center">Notebooks</h1><p>The core of the ULarch programming environment is the notebook system. A notebook consists of&nbsp;a sequence of editable blocks, that contain either rich text - like this one - or code - such as the ones below.&nbsp;</p><p><br></p><h3>Adding blocks of text and code</h3><p>Add blocks of text or code by choosing the 'Insert ...' options from the Edit menu at the top of the page. Alternatively, these commands can be acessed from the command bar. Press <code>Esc</code> followed by <code>h</code> to invoke the help, which will list the commands for you.</p>
p43
sg29
g37
sbag0
(g23
g2
Ntp44
Rp45
(dp46
g27
V<h2>Python Code</h2><p>To edit the contents of a block of Python code, click within it to place the caret and start typing.<br></p><p>Python code blocks can be executed, with the results displayed below each block. To execute the blocks in a notebook, press Control-Enter or use the&nbsp;<em>Execute</em>&nbsp;button in the command bar at the top.</p><p>Output sent to the standard output and standard error streams is displayed:</p>
p47
sg29
g37
sbag0
(clarch.apps.notebook.notebook
NotebookBlockCode
p48
g2
Ntp49
Rp50
(dp51
S'code'
p52
g0
(clarch.apps.source_code
PythonCode
p53
g2
Ntp54
Rp55
(dp56
g52
Vprint 'Text sent to stdout is displayed as seen here'
p57
sS'editable'
p58
I01
sbsg29
g37
sbag0
(g23
g2
Ntp59
Rp60
(dp61
g27
V<p>If the last line is an expression that can be evaluated, the resulting value is displayed:</p>
p62
sg29
g37
sbag0
(g48
g2
Ntp63
Rp64
(dp65
g52
g0
(g53
g2
Ntp66
Rp67
(dp68
g52
Vimport math\u000a\u000amath.pi*10*10
p69
sg58
I01
sbsg29
g37
sbag0
(g23
g2
Ntp70
Rp71
(dp72
g27
V<p>If the result is an object, it is displayed in a debugger style form. The sections&nbsp;(<em>Type</em>,&nbsp;<em>Attributes</em>&nbsp;and&nbsp;<em>repr</em>) can be expanded to show the type, attribute values and string representation of the object respectively:</p>
p73
sg29
g37
sbag0
(g48
g2
Ntp74
Rp75
(dp76
g52
g0
(g53
g2
Ntp77
Rp78
(dp79
g52
Vclass Point (object):\u000a    def __init__(self, x, y):\u000a        self.x = x\u000a        self.y = y\u000a\u000aPoint(10.0, 20.0)
p80
sg58
I01
sbsg29
g37
sbag0
(g23
g2
Ntp81
Rp82
(dp83
g27
V<h2>Other code; CSS, Javascript, HTML and GLSL</h2><p>Blocks of code in other langauges (currently CSS, JS, HTML and GLSL)&nbsp;can be created as well. The source text is bound to a local Python variable, named in text box in the code block header.</p><p>The block below creates a local variable called test_css, whose value will be a string containing the CSS code in the block.</p>
p84
sg29
g37
sbag0
(clarch.apps.notebook.notebook
NotebookBlockSource
p85
g2
Ntp86
Rp87
(dp88
g52
g0
(clarch.apps.source_code
CSSCode
p89
g2
Ntp90
Rp91
(dp92
g52
V.example_class {\u000a    font-family: Roboto, sans-serif;\u000a}
p93
sg58
I01
sbsS'var_name'
p94
Vtest_css
p95
sg29
g37
sbag0
(g48
g2
Ntp96
Rp97
(dp98
g52
g0
(g53
g2
Ntp99
Rp100
(dp101
g52
V# Show the value of test_css\u000atest_css
p102
sg58
I01
sbsg29
g37
sbag0
(g23
g2
Ntp103
Rp104
(dp105
g27
V<h2>Rich text</h2><p>Edit a block of rich text by hovering the mouse pointer over it, and click the edit button that appears on the right. Alternatively, <code>Alt-click</code> on the block. This will invoke the rich text editor, provided by&nbsp;<a data-cke-saved-href="http://ckeditor.com/" href="http://ckeditor.com/">ckEditor</a>.</p><p>Create a block of rich text by choosing 'Insert rich text (above)' or 'Insert rich text (below)' from the edit menu at the top of the page.</p>
p106
sg29
g37
sbasbsg30
Vnotebooks
p107
sg32
I1
sbag0
(g12
g2
Ntp108
Rp109
(dp110
g16
g0
(g17
g2
Ntp111
Rp112
(dp113
g21
(lp114
g0
(g23
g2
Ntp115
Rp116
(dp117
g27
V<h1 style="text-align:center">Projects</h1><p>Python programs and libraries are often broken into modules and packages, with each module being a Python source code file and each package being a directory.</p><p>Ubiquitous Larch projects fulfil the same role. This document is takes the form of a project. Its project page can be accessed by clicking <a data-cke-saved-href="/pages/docs/dev_environment" href="/pages/docs/dev_environment">here</a>. If you follow the link, you will see that the development environment section of the documentation comes as a project. There are pages for the <a data-cke-saved-href="/pages/docs/dev_environment/frontpage" href="/pages/docs/dev_environment/frontpage">front page</a>, <a data-cke-saved-href="/pages/docs/dev_environment/notebooks" href="/pages/docs/dev_environment/notebooks">notebooks</a> and <a data-cke-saved-href="/pages/docs/dev_environment/projects" href="/pages/docs/dev_environment/projects">projects</a> (this page).&nbsp;The development environment project also contains a package called <code>lib</code>&nbsp;that contains two pages - <code>circle</code> and <code>rectangle</code>&nbsp;- each of which is a notebook.&nbsp;Each notebook acts as a module; its contents can be imported much as they can in a normal Python module.</p><p>There are two things that you should be aware of however.</p><h2>Root package name</h2><p>You will notice that the project page has a&nbsp;<em>root package name</em>. This is the name under which all packages and pages can be imported; <em>devenv</em>&nbsp;in the case of this project. For example, to import the&nbsp;<em>circle</em>&nbsp;module from the&nbsp;<em>lib</em>&nbsp;package, we would use:</p>
p118
sg29
g112
sbag0
(g48
g2
Ntp119
Rp120
(dp121
g52
g0
(g53
g2
Ntp122
Rp123
(dp124
g52
Vfrom devenv.lib import circle\u000a\u000acircle.circle_area(10)
p125
sg58
I01
sbsg29
g112
sbag0
(g48
g2
Ntp126
Rp127
(dp128
g52
g0
(g53
g2
Ntp129
Rp130
(dp131
g52
Vcircle.circle_circumference(10)
p132
sg58
I01
sbsg29
g112
sbag0
(g23
g2
Ntp133
Rp134
(dp135
g27
V<h2>Unload modules</h2><p>Making changes to the contents of another module does&nbsp;<em>not</em>&nbsp;cause its contents to be re-imported into other modules. Python's&nbsp;<code>sys.modules</code>&nbsp;dictionary (part of the Python system)&nbsp;will contain stale references to&nbsp;the old (incorrect) versions of the modules. The&nbsp;<em>Unload</em>&nbsp;button on the project page will unload any modules that were imported from the project. You can then re-execute the page that uses the modified module to get the correct results.</p><p>For example, the&nbsp;<code>rectangle</code>&nbsp;module has an error in the impementation of&nbsp;<code>rect_circumference</code>, as seen below:</p>
p136
sg29
g112
sbag0
(g48
g2
Ntp137
Rp138
(dp139
g52
g0
(g53
g2
Ntp140
Rp141
(dp142
g52
Vfrom devenv.lib import rectangle\u000a\u000arectangle.rect_circumference(10, 20)		# Should result in 60
p143
sg58
I01
sbsg29
g112
sbag0
(g23
g2
Ntp144
Rp145
(dp146
g27
V<p>Go to the <a data-cke-saved-href="/pages/docs/dev_environment" href="/pages/docs/dev_environment">project</a>, enter the&nbsp;<code>rectangle</code>&nbsp;module&nbsp;and make the necessary changes.</p><p>Then, you need to unload the existing modules. Either click the&nbsp;<em>Unload</em>&nbsp;button on the project page or use the command sequence <kbd>Esc-U</kbd>. After that, re-execute this notebook to get the correct result.</p>
p147
sg29
g112
sbasbsg30
Vprojects
p148
sg32
I2
sbag0
(clarch.apps.project.project_package
ProjectPackage
p149
g2
Ntp150
Rp151
(dp152
g30
Vlib
p153
sg10
(lp154
g0
(g12
g2
Ntp155
Rp156
(dp157
g16
g0
(g17
g2
Ntp158
Rp159
(dp160
g21
(lp161
g0
(g23
g2
Ntp162
Rp163
(dp164
g27
V<h1>Helper functions: rectangle</h1><p>Please go to the page called&nbsp;<em>main</em>&nbsp;within this project to see the main tutorial; this page contains helper functions.</p>
p165
sg29
g159
sbag0
(g48
g2
Ntp166
Rp167
(dp168
g52
g0
(g53
g2
Ntp169
Rp170
(dp171
g52
Vdef rect_circumference(width, height):\u000a    # Mistake here\u000a    \u000a    # Should multiply by 2; see the main page\u000a    return (width + height)\u000a\u000adef rect_area(width, height):\u000a    return width * height
p172
sg58
I01
sbsg29
g159
sbasbsg30
Vrectangle
p173
sg32
I3
sbag0
(g12
g2
Ntp174
Rp175
(dp176
g16
g0
(g17
g2
Ntp177
Rp178
(dp179
g21
(lp180
g0
(g23
g2
Ntp181
Rp182
(dp183
g27
V<h1>Helper functions: circle</h1><p>Please go to the page called&nbsp;<em>main</em>&nbsp;within this project to see the main tutorial; this page contains helper functions.</p>
p184
sg29
g178
sbag0
(g48
g2
Ntp185
Rp186
(dp187
g52
g0
(g53
g2
Ntp188
Rp189
(dp190
g52
Vimport math\u000a\u000adef circle_circumference(radius):\u000a    return math.pi * radius * 2.0\u000a\u000adef circle_area(radius):\u000a    return math.pi * radius * radius
p191
sg58
I01
sbsg29
g178
sbasbsg30
Vcircle
p192
sg32
I4
sbasbag0
(g12
g2
Ntp193
Rp194
(dp195
g16
g0
(g17
g2
Ntp196
Rp197
(dp198
g21
(lp199
g0
(g23
g2
Ntp200
Rp201
(dp202
g27
V<h1 style="text-align:center">Hyperlinking</h1><p><br></p><p>Creating a hyperlink within a notebook is simple; edit a block of rich text (see <a data-cke-saved-href="/pages/docs/dev_environment/notebooks" href="/pages/docs/dev_environment/notebooks">here</a>) and clicking the link button.</p><p><br></p><h3>Linking to other notebooks</h3><p>A little care must be taken when linking to notebooks within the same project, as you must ensure that the URL is portable, by using relative URLs.<br></p><p>For example, the address of this page is&nbsp;<code>http://127.0.0.1:5000/pages/docs/dev_environment/projects</code>&nbsp;(<a data-cke-saved-href="http://127.0.0.1:5000/pages/docs/dev_environment/projects" href="http://127.0.0.1:5000/pages/docs/dev_environment/projects">link</a>) This absolute URL and link will&nbsp;<strong>not work</strong>&nbsp;when Larch is not running on localhost, port 5000.<br></p><p>You will want to remove the server address so that it can work when hosted on a different machine; remove the start of the URL, up to the path, leaving&nbsp;<code>/pages/docs/dev_environment/projects</code>&nbsp;(<a data-cke-saved-href="/pages/docs/dev_environment/projects" href="http://127.0.0.1:5000/pages/docs/dev_environment/projects">link</a>). This however will not work if the file&nbsp;(<code>dev_environment</code>) is renamed. To address this, use a relative path (use <code>.</code> and <code>..</code>),&nbsp;for example&nbsp;<code>./projects</code>&nbsp;(<a data-cke-saved-href="./projects" href="http://127.0.0.1:5000/pages/docs/dev_environment/projects">link</a>).</p>
p203
sg29
g197
sbasbsg30
Vhyperlinking
p204
sg32
I5
sbasb.