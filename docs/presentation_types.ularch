ccopy_reg
_reconstructor
p0
(clarch.apps.project.project_root
ProjectRoot
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'startup_page_id'
p6
NsS'python_package_name'
p7
NsS'front_page_id'
p8
NsS'contents'
p9
(lp10
g0
(clarch.apps.project.project_page
ProjectPage
p11
g2
Ntp12
Rp13
(dp14
S'data'
p15
g0
(clarch.apps.notebook.notebook
Notebook
p16
g2
Ntp17
Rp18
(dp19
S'blocks'
p20
(lp21
g0
(clarch.apps.notebook.notebook
NotebookBlockText
p22
g2
Ntp23
Rp24
(dp25
S'text'
p26
V<h1 style="text-align:center">The <code>Pres</code> class</h1><p><br></p><p>This document is a work in progress.</p><p>Pres is an abstract base class that is the root of all presentation types.</p><h2>API</h2><p>Package:&nbsp;<code>larch.pres.pres</code></p><p><code>class Pres (object)</code></p><p style="margin-left:40px">Abstract, with&nbsp;no constructor</p><p style="margin-left:40px">Methods:</p><p style="margin-left:80px"><code>with_event_handler(self, event_filter_or_handler, event_handler)</code></p><p style="margin-left:120px">Chain method that returns a presentation type that represents <code>self</code>, wrapped so that events that bubble up to this part of the presentation can be handled by the event handlers that are attached.</p><p style="margin-left:120px">It is used in two forms, either:</p><pre style="margin-left:160px">def on_any_event(event):\u000a    name_of_event = event.name\u000a&nbsp;   data_from_event = event.data\u000a&nbsp;   # We are only interested in clicked events. We must return a boolean indicating whether we handled the event or not\u000a&nbsp;   return name_of_event == 'clicked'\u000a\u000ax_with_any_event_handled = x.with_event_handler(on_any_event)</pre><p style="margin-left:120px">Or:</p><pre style="margin-left:160px">def on_clicked_event(event):\u000a    data_from_event = event.data\u000a    return True\u000a\u000ax_with_clicked_events_handled = x.with_event_handler('clicked', on_clicked_event)</pre><p style="margin-left:120px"><br></p><p><br></p>
p27
sS'notebook'
p28
g18
sbasbsS'name'
p29
VPres_class
p30
sS'id'
p31
I1
sbasb.