ccopy_reg
_reconstructor
p0
(clarch.apps.notebook.notebook
Notebook
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'blocks'
p6
(lp7
g0
(clarch.apps.notebook.notebook
NotebookBlockText
p8
g2
Ntp9
Rp10
(dp11
S'text'
p12
V<h1 style="text-align:center">Basic HTML</h1><p>This notebook demonstrates how to create and display basic HTML, using the <code>Html</code> presentation type.</p>
p13
sS'notebook'
p14
g4
sbag0
(g8
g2
Ntp15
Rp16
(dp17
g12
V<h2>Examples</h2><p>The first step is to import the&nbsp;<code>Html</code>&nbsp;presentation type. Presentation types describe a presentation that is to be built. They&nbsp;will be covered in more detail later.</p>
p18
sg14
g4
sbag0
(clarch.apps.notebook.notebook
NotebookBlockCode
p19
g2
Ntp20
Rp21
(dp22
S'code'
p23
g0
(clarch.apps.source_code
PythonCode
p24
g2
Ntp25
Rp26
(dp27
g23
V# Import the HTML presentation combinator\u000a\u000afrom larch.pres.html import Html\u000a\u000a# Construct an Html object, with the content in a string.\u000a\u000aHtml('<h3>Hello world</h3>')
p28
sS'editable'
p29
I01
sbsg14
g4
sbag0
(g8
g2
Ntp30
Rp31
(dp32
g12
V<p>The <code>Html</code> presentation type&nbsp;can also take multiple arguments. Arguments do not have to be strings either; primitive objects also work:</p>
p33
sg14
g4
sbag0
(g19
g2
Ntp34
Rp35
(dp36
g23
g0
(g24
g2
Ntp37
Rp38
(dp39
g23
VHtml('<p>An interger: ', 5, ', and a float: ', 3.14, ', and finally a bool: ', True, '</p>')
p40
sg29
I01
sbsg14
g4
sbag0
(g8
g2
Ntp41
Rp42
(dp43
g12
V<p>Note that the text is left as is; the paragraph appears as expected, while the values are converted and displayed. The (admittedly subtle) colours hint that they are not just converted to strings. In fact, any object can be included:</p>
p44
sg14
g4
sbag0
(g19
g2
Ntp45
Rp46
(dp47
g23
g0
(g24
g2
Ntp48
Rp49
(dp50
g23
Vclass Point (object):\u000a    def __init__(self, x, y):\u000a    	self.x = x\u000a        self.y = y\u000a        \u000ap = Point(5.0, 10.0)\u000a\u000aHtml('<p>Constructing a point at [', p.x, ',', p.y, '] results in a point object:</p>', p)
p51
sg29
I01
sbsg14
g4
sbag0
(g8
g2
Ntp52
Rp53
(dp54
g12
V<p>The object is displayed within the text that surrounds it; it is automatically converted into a visual, interactive form.</p><p>This occurs because all objects within U-Larch are displayed visually. More on this later.</p>
p55
sg14
g4
sbag0
(g8
g2
Ntp56
Rp57
(dp58
g12
V<h2>Convenience methods&nbsp;<code>append</code>&nbsp;and&nbsp;<code>extend</code></h2><p>If you wish to join lists of content to be displayed, the code can get a little ugly, as you must join lists, wrap in parens and unpack:</p>
p59
sg14
g4
sbag0
(g19
g2
Ntp60
Rp61
(dp62
g23
g0
(g24
g2
Ntp63
Rp64
(dp65
g23
Vcontents = [', and a float: ', 3.14,]\u000aHtml(*(['<p>An interger: ', 5] + contents + [', and finally a bool: ', True, '</p>']))
p66
sg29
I01
sbsg14
g4
sbag0
(g8
g2
Ntp67
Rp68
(dp69
g12
V<p>The&nbsp;<code>append</code>&nbsp;and&nbsp;<code>extend</code>&nbsp;methods are chain methods that allow you to add content. Both can take multiple items;&nbsp;<code>append</code>&nbsp;takes them as multiple arguments,&nbsp;<code>extend</code>&nbsp;takes a list as a single argument:</p>
p70
sg14
g4
sbag0
(g19
g2
Ntp71
Rp72
(dp73
g23
g0
(g24
g2
Ntp74
Rp75
(dp76
g23
Vcontents = [', and a float: ', 3.14,]\u000a# Use extend to add @contents as a list, and append to add multiple items using multiple arguments\u000aHtml('<p>An interger: ', 5).extend(contents).append(', and finally a bool: ', True, '</p>')
p77
sg29
I01
sbsg14
g4
sbag0
(g8
g2
Ntp78
Rp79
(dp80
g12
V<h2>Escaping text</h2><p>Strings passed to the <code>Html</code> presentation type are interpreted as HTML code. Should you wish to display HTML control characters (e.g. &lt;, &gt;, etc) you can use the <code>Html.escape_str()</code> method to escape them:</p>
p81
sg14
g4
sbag0
(g19
g2
Ntp82
Rp83
(dp84
g23
g0
(g24
g2
Ntp85
Rp86
(dp87
g23
VHtml(Html.escape_str('<p>An HTML paragraph</p>'))
p88
sg29
I01
sbsg14
g4
sbasb.