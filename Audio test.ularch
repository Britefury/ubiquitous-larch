ccopy_reg
_reconstructor
p0
(clarch.apps.notebook.notebook
Notebook
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'blocks'
p6
(lp7
g0
(clarch.apps.notebook.notebook
NotebookBlockText
p8
g2
Ntp9
Rp10
(dp11
S'text'
p12
V<h1 style="text-align:center">Audio capture test</h1><p>In the first example we create an audio capture button that will generate WAV data for us:</p>
p13
sS'notebook'
p14
g4
sbag0
(clarch.apps.notebook.notebook
NotebookBlockCode
p15
g2
Ntp16
Rp17
(dp18
S'code'
p19
g0
(clarch.apps.source_code
PythonCode
p20
g2
Ntp21
Rp22
(dp23
g19
Vfrom larch.pres.html import Html\u000afrom larch.media import audio\u000afrom larch.live import LiveValue\u000a\u000a\u000a\u000a\u000ax = LiveValue()\u000a\u000adef on_data(data_file, sample_rate, num_samples, num_channels):\u000a    data = data_file.read()\u000a    x.value = Html(audio.wav_player_from_data(data), '<br>',\u000a                   '<div>Sample rate: {0}</div>'.format(sample_rate),\u000a                   '<div>{0} samples ({1} seconds)</div>'.format(num_samples, float(num_samples)/sample_rate),\u000a                   '<div>{0} channels</div>'.format(num_channels),\u000a                   '<div>{0} bytes</div>'.format(len(data)))\u000a    \u000a\u000acap = audio.audio_capture_button(1, 'wav', on_data)\u000a\u000aHtml(cap, '<br>', x)
p24
sS'editable'
p25
I01
sbsg14
g4
sbag0
(g8
g2
Ntp26
Rp27
(dp28
g12
V<p>Now we create a capture button that generates 16-bit raw data and use the <code>raw_16_to_wav</code> function to convert it to WAV, so that the browser <code>audio</code>&nbsp;element can handle it:</p>
p29
sg14
g4
sbag0
(g15
g2
Ntp30
Rp31
(dp32
g19
g0
(g20
g2
Ntp33
Rp34
(dp35
g19
V# Now using raw:\u000ay = LiveValue()\u000a\u000adef on_data2(data_file, sample_rate, num_samples, num_channels):\u000a    raw16_data = data_file.read()\u000a    wav_data = audio.raw16_to_wav(raw16_data, sample_rate, num_channels)\u000a    y.value = Html(audio.wav_player_from_data(wav_data), '<br>',\u000a                   '<div>Sample rate: {0}</div>'.format(sample_rate),\u000a                   '<div>{0} samples ({1} seconds)</div>'.format(num_samples, float(num_samples)/sample_rate),\u000a                   '<div>{0} channels</div>'.format(num_channels),\u000a                   '<div>{0} bytes</div>'.format(len(raw16_data)))\u000a    \u000a\u000acap2 = audio.audio_capture_button(1, 'raw16', on_data2)\u000a\u000aHtml(cap2, '<br>', y)
p36
sg25
I01
sbsg14
g4
sbasb.